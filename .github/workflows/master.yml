name: Build and deploy to preprod on push to master

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/su-se-bakover:${{ github.sha }}

jobs:
  build:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle.properties', 'settings.gradle.properties', '**/build.gradle.kts', 'gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: test and build
        run: ./gradlew test build
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v1.14.1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish Docker image
        uses: docker/build-push-action@v2.9.0
        with:
          context: .
          push: true
          pull: true
          tags: ${{env.IMAGE}}

  snyk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk11@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: --all-sub-projects --org=supstonad
          command: monitor

  deploy_to_dev:
    name: Deploy to dev
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais.yml
          VARS: nais-dev.json

  generate-draft-release:
    name: Generate/update draft release
    runs-on: ubuntu-latest
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
